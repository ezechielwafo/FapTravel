security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # users_in_memory: { memory: null } # <-- Supprime ou commente cette ligne
        # Ajoute ton propre fournisseur basé sur l'entité User
        app_user_provider:
            entity:
                class: App\Entity\User # <--- Assure-toi que c'est le bon namespace et nom de classe
                property: email # <--- Assure-toi que c'est la propriété utilisée pour le login (email, username, etc.)

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            # provider: users_in_memory # <-- Change ceci pour utiliser ton nouveau provider
            provider: app_user_provider

            # activate normal login (décommenter et configurer)
            form_login:
                login_path: app_login # <--- Le nom de la route de ton contrôleur de login
                check_path: app_login # <--- L'URL où le formulaire de login est soumis
                default_target_path: /dashboard
                enable_csrf: true
                # default_target_path: app_dashboard # Optionnel: où rediriger après un login réussi
                # target_path_parameter: _target_path

            # activate logout (décommenter et configurer)
            logout:
                path: app_logout # <--- Le nom de la route de ton contrôleur de logout
                # target: app_home # Optionnel: où rediriger après un logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # Décommenter et configurer les règles d'accès
        - { path: ^/admin, roles: ROLE_ADMIN } # Protège toutes les URLs commençant par /admin
        - { path: ^/dashboard, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/profile, roles: ROLE_USER }
        # - { path: ^/, roles: PUBLIC_ACCESS } # Permet l'accès public par défaut si tu as d'autres règles plus spécifiques



when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10